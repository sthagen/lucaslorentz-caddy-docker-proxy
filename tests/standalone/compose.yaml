version: '3.7'

services:

  caddy:
    image: caddy-docker-proxy:local
    ports:
      - 80:80
      - 443:443
    networks:
      - caddy
    volumes:
      - source: "${DOCKER_SOCKET_PATH}"
        target: "${DOCKER_SOCKET_PATH}"
        type: ${DOCKER_SOCKET_TYPE}

  # Proxy to service
  whoami0:
    image: jwilder/whoami
    networks:
      - caddy
    deploy:
      labels:
        caddy: whoami0.example.com
        caddy.reverse_proxy: "{{upstreams 8000}}"
        caddy.tls: "internal"

  # Proxy to service
  whoami1:
    image: jwilder/whoami
    networks:
      - caddy
    deploy:
      labels:
        caddy: whoami1.example.com
        caddy.reverse_proxy: "{{upstreams 8000}}"
        caddy.tls: "internal"

  # Proxy to container
  whoami2:
    image: jwilder/whoami
    networks:
      - caddy
    labels:
      caddy: whoami2.example.com
      caddy.reverse_proxy: "{{upstreams 8000}}"
      caddy.tls: "internal"

  # Proxy to container
  whoami3:
    image: jwilder/whoami
    networks:
      - caddy
    labels:
      caddy: whoami3.example.com
      caddy.reverse_proxy: "{{upstreams 8000}}"
      caddy.tls: "internal"

  # Proxy with matches and route
  echo_0:
    image: brndnmtthws/nginx-echo-headers
    networks:
      - caddy
    deploy:
      labels:
        caddy: echo0.example.com
        caddy.@match.path: "/sourcepath /sourcepath/*"
        caddy.route: "@match"
        caddy.route.0_uri: "strip_prefix /sourcepath"
        caddy.route.1_rewrite: "* /targetpath{path}"
        caddy.route.2_reverse_proxy: "{{upstreams 8080}}"
        caddy.tls: "internal"

networks:
  caddy:
    name: caddy_test
    external: true